{"pageProps":{"note":{"id":"f49q2e7ln41rpeqz70st4ow","title":"Security","desc":"","updated":1692188298007,"created":1664950570990,"custom":{},"fname":"learning.javascript.security","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"bd39f66cebb5225c57d78113fd0240b9","links":[],"anchors":{"owaspopen-web-application-security-project-":{"type":"header","text":"OWASP(Open Web Application Security Project )","value":"owaspopen-web-application-security-project-","line":10,"column":0,"depth":2},"injection":{"type":"header","text":"Injection:","value":"injection","line":14,"column":0,"depth":3},"example":{"type":"header","text":"Example","value":"example","line":18,"column":0,"depth":4},"prevention":{"type":"header","text":"Prevention","value":"prevention","line":37,"column":2,"depth":4},"identification-and-authentication-failures-previously-broken-authentication":{"type":"header","text":"Identification and Authentication Failures (previously, Broken Authentication)","value":"identification-and-authentication-failures-previously-broken-authentication","line":60,"column":0,"depth":3},"example-1":{"type":"header","text":"example","value":"example-1","line":64,"column":0,"depth":4},"prevention-1":{"type":"header","text":"Prevention","value":"prevention-1","line":68,"column":0,"depth":4},"cryptographic-failures-previously--sensitive-data-exposure":{"type":"header","text":"Cryptographic Failures (previously : Sensitive Data Exposure)","value":"cryptographic-failures-previously--sensitive-data-exposure","line":72,"column":0,"depth":3},"example-2":{"type":"header","text":"Example:","value":"example-2","line":76,"column":0,"depth":4},"prevention-2":{"type":"header","text":"Prevention","value":"prevention-2","line":80,"column":0,"depth":4},"insecure-design":{"type":"header","text":"Insecure Design","value":"insecure-design","line":87,"column":0,"depth":3},"broken-access-control":{"type":"header","text":"Broken Access Control:","value":"broken-access-control","line":91,"column":0,"depth":3},"example-3":{"type":"header","text":"Example:","value":"example-3","line":97,"column":0,"depth":4},"prevention-3":{"type":"header","text":"Prevention","value":"prevention-3","line":105,"column":0,"depth":4},"security-misconfiguration":{"type":"header","text":"Security Misconfiguration:","value":"security-misconfiguration","line":110,"column":0,"depth":3},"example-4":{"type":"header","text":"Example:","value":"example-4","line":114,"column":0,"depth":4},"xml-external-entity-xxe":{"type":"header","text":"XML External Entity (XXE)","value":"xml-external-entity-xxe","line":122,"column":0,"depth":4},"cross-site-scripting-xss":{"type":"header","text":"Cross-Site Scripting (XSS):","value":"cross-site-scripting-xss","line":129,"column":0,"depth":3},"example-5":{"type":"header","text":"Example:","value":"example-5","line":133,"column":0,"depth":4},"prevention-4":{"type":"header","text":"Prevention","value":"prevention-4","line":146,"column":0,"depth":4},"server-side-request-forgery-ssrf":{"type":"header","text":"Server-Side Request Forgery (SSRF)","value":"server-side-request-forgery-ssrf","line":150,"column":0,"depth":3},"csrf":{"type":"header","text":"CSRF","value":"csrf","line":154,"column":0,"depth":4},"vulnerable-and-outdated-components-previously-using-components-with-known-vulnerabilities":{"type":"header","text":"Vulnerable and Outdated Components (previously: Using Components with Known Vulnerabilities)","value":"vulnerable-and-outdated-components-previously-using-components-with-known-vulnerabilities","line":158,"column":0,"depth":3},"example-6":{"type":"header","text":"Example:","value":"example-6","line":162,"column":0,"depth":4},"security-logging-and-monitoring-failures":{"type":"header","text":"Security Logging and Monitoring Failures","value":"security-logging-and-monitoring-failures","line":166,"column":0,"depth":3},"example-7":{"type":"header","text":"Example:","value":"example-7","line":170,"column":0,"depth":4}},"children":[],"parent":"8k7fj3knfjs2vz42yxldbzk","data":{}},"body":"<h1 id=\"security\">Security<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#security\"></a></h1>\n<ul>\n<li><a href=\"https://owasp.org/www-project-top-ten/\">OWASP Top Ten Vulnerabilities</a></li>\n</ul>\n<h2 id=\"owaspopen-web-application-security-project-\">OWASP(Open Web Application Security Project )<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#owaspopen-web-application-security-project-\"></a></h2>\n<p>The OWASP (Open Web Application Security Project) Top Ten is a widely recognized list of the most critical web application security risks. These vulnerabilities represent common issues that can lead to security breaches if not properly addressed.</p>\n<h3 id=\"injection\"><strong>Injection</strong>:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#injection\"></a></h3>\n<p>This occurs when untrusted data is sent to an interpreter as part of a command or query, leading to unintended actions. An attacker can manipulate input fields to execute arbitrary code.</p>\n<h4 id=\"example\">Example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example\"></a></h4>\n<ul>\n<li>\n<p><strong>SQL Injection</strong> - Attacker inserts malicious SQL code into a login form, gaining unauthorized access to a database.</p>\n<ul>\n<li>SQL Injection Based on <strong>1=1</strong> is Always True.</li>\n</ul>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Users <span class=\"token keyword\">WHERE</span> UserId <span class=\"token operator\">=</span> <span class=\"token number\">105</span> <span class=\"token operator\">OR</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li>SQL Injection Based on Batched SQL Statements</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\">txtUserId <span class=\"token operator\">=</span> <span class=\"token function\">getRequestString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UserId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntxtSQL <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT * FROM Users WHERE UserId = '</span> <span class=\"token operator\">+</span> txtUserId<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//What is user entered 105; DROP TABLE Suppliers in input box for UserId? The txtSQL will result in:</span>\n<span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> <span class=\"token maybe-class-name\">Users</span> <span class=\"token constant\">WHERE</span> <span class=\"token maybe-class-name\">UserId</span> <span class=\"token operator\">=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">;</span> <span class=\"token constant\">DROP</span> <span class=\"token constant\">TABLE</span> <span class=\"token maybe-class-name\">Suppliers</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"prevention\">Prevention<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prevention\"></a></h4>\n<ul>\n<li>using <strong>PREPARED STATEMENTS</strong>: The idea is very simple - the query and the data are sent to the database server separately.</li>\n</ul>\n</li>\n</ul>\n<p>The <em>mysql2</em> library handles the parameter binding and escaping internally, ensuring that each value is treated as <strong>data</strong>, not <strong>executable code</strong>.</p>\n<pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/batchInsert'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> usersToInsert <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">users</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// An array of user objects</span>\n\n  <span class=\"token comment\">// Using a prepared statement for batch insert</span>\n  <span class=\"token keyword\">const</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">'INSERT INTO users (username, email) VALUES (?, ?)'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> values <span class=\"token operator\">=</span> usersToInsert<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">.</span><span class=\"token property-access\">username</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span><span class=\"token property-access\">email</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  connection<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>values<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> results</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token spread operator\">...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3 id=\"identification-and-authentication-failures-previously-broken-authentication\">Identification and Authentication Failures (previously, Broken Authentication)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#identification-and-authentication-failures-previously-broken-authentication\"></a></h3>\n<p>Flaws in authentication and session management can lead to unauthorized access to accounts and sensitive data.</p>\n<h4 id=\"example-1\">example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-1\"></a></h4>\n<ul>\n<li><strong>Credential stuffing</strong> - Attackers use previously stolen credentials to gain unauthorized access to user accounts on various sites.</li>\n</ul>\n<h4 id=\"prevention-1\">Prevention<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prevention-1\"></a></h4>\n<ul>\n<li>Implement strong password policies, enable multi-factor authentication (MFA), use secure session management, and enforce secure password storage (e.g., bcrypt hashing).</li>\n</ul>\n<h3 id=\"cryptographic-failures-previously--sensitive-data-exposure\">Cryptographic Failures (previously : Sensitive Data Exposure)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cryptographic-failures-previously--sensitive-data-exposure\"></a></h3>\n<p>This vulnerability involves inadequate protection of sensitive data, such as passwords, credit card numbers, and personal information.</p>\n<h4 id=\"example-2\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-2\"></a></h4>\n<ul>\n<li><strong>Insecure storage</strong> - Storing passwords in plain text instead of hashing them, making it easy for attackers to steal user credentials.</li>\n</ul>\n<h4 id=\"prevention-2\">Prevention<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prevention-2\"></a></h4>\n<ul>\n<li>Encrypt sensitive data at rest and during transmission (use HTTPS).</li>\n<li>Avoid storing sensitive information unless absolutely necessary.</li>\n<li>Implement proper access controls to limit who can access sensitive data.</li>\n<li>Disable caching for response that contain sensitive data.</li>\n</ul>\n<h3 id=\"insecure-design\">Insecure Design<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#insecure-design\"></a></h3>\n<p><em>Scenario</em>: A chain of cinemas provides discounts for group bookings but mandates a deposit when the group size exceeds fifteen attendees. Malicious actors could analyze this process and attempt to determine whether it's possible to reserve six hundred seats across all cinemas in just a few requests. This could potentially lead to a significant financial loss.</p>\n<h3 id=\"broken-access-control\"><strong>Broken Access Control</strong>:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#broken-access-control\"></a></h3>\n<p>Improper enforcement of restrictions on what authenticated users can do can lead to unauthorized actions.</p>\n<ul>\n<li>Access control enforces policy such that users cannot act outside of their intended permissions</li>\n</ul>\n<h4 id=\"example-3\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-3\"></a></h4>\n<ul>\n<li>Permitting viewing or editing someone else's account, by providing its unique identifier (insecure direct object references)</li>\n</ul>\n<p><em>Scenario</em>: <em>An application allows users to view their own account details by navigating to <a href=\"https://example.com/profile?user_id=123\">https://example.com/profile?user_id=123</a>. The attacker changes the user_id parameter to access another user's account.</em></p>\n<ul>\n<li>CORS misconfiguration allows API access from unauthorized/untrusted origins.</li>\n</ul>\n<h4 id=\"prevention-3\">Prevention<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prevention-3\"></a></h4>\n<ul>\n<li>Except for public resources, deny access by default.</li>\n<li>Stateful session identifiers should be invalidated on the server after logout. Stateless JWT tokens should rather be short-lived so that the window of opportunity for an attacker is minimized. For longer lived JWTs it's highly recommended to follow the OAuth standards to revoke access.</li>\n</ul>\n<h3 id=\"security-misconfiguration\"><strong>Security Misconfiguration</strong>:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#security-misconfiguration\"></a></h3>\n<p>Failure to securely configure settings and security controls can expose sensitive data or provide attackers with unnecessary access.</p>\n<h4 id=\"example-4\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-4\"></a></h4>\n<ul>\n<li><em>Default credentials</em> - Leaving default usernames and passwords for admin accounts, enabling attackers to easily access and control the application.</li>\n</ul>\n<p><em>Scenario</em>: An application's admin panel has default credentials (admin/admin). The attacker uses these credentials to log in and compromise the system.</p>\n<p>In 2023 guidelines, XXE is also under this.</p>\n<h4 id=\"xml-external-entity-xxe\">XML External Entity (XXE)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#xml-external-entity-xxe\"></a></h4>\n<p>XXE security vulnerability allows a attacker to inject unsafe XML entities into a web application that processes XML data. Attackers can exploit this to read files on the server.\neg:</p>\n<ul>\n<li>Attacker submits malicious XML input that references a sensitive file, gaining unauthorized access to its content.</li>\n</ul>\n<h3 id=\"cross-site-scripting-xss\"><strong>Cross-Site Scripting (XSS)</strong>:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cross-site-scripting-xss\"></a></h3>\n<p>XSS occurs when an application includes untrusted data in a web page, allowing attackers to execute malicious scripts in the context of a user's browser.</p>\n<h4 id=\"example-5\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-5\"></a></h4>\n<p>in an input feild, that directly gets added to the DOM, attacker might add a script to execute something like:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>button</span>\n  <span class=\"token special-attr\"><span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">location</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">href</span> <span class=\"token operator\">=</span> \n<span class=\"token string\">'http://malicious-site.com'</span></span><span class=\"token punctuation\">\"</span></span></span>\n<span class=\"token punctuation\">></span></span>\n  Get offers\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>button</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<h4 id=\"prevention-4\">Prevention<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prevention-4\"></a></h4>\n<ul>\n<li>implement non-bypassable Content Security Policy(CSP) policy. CSP specifies which sources of content are considered valid for specific types of resources on a web page</li>\n</ul>\n<h3 id=\"server-side-request-forgery-ssrf\"><strong>Server-Side Request Forgery (SSRF)</strong><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#server-side-request-forgery-ssrf\"></a></h3>\n<p>SSRF flaws occur whenever a web application is fetching a remote resource without validating the user-supplied URL</p>\n<h4 id=\"csrf\">CSRF<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#csrf\"></a></h4>\n<p>Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they’re currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker’s choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.</p>\n<h3 id=\"vulnerable-and-outdated-components-previously-using-components-with-known-vulnerabilities\">Vulnerable and Outdated Components (previously: Using Components with Known Vulnerabilities)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vulnerable-and-outdated-components-previously-using-components-with-known-vulnerabilities\"></a></h3>\n<p>Integrating outdated or vulnerable third-party components can expose applications to known exploits.</p>\n<h4 id=\"example-6\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-6\"></a></h4>\n<ul>\n<li>Including a vulnerable version of a library in an application, allowing attackers to exploit known weaknesses.</li>\n</ul>\n<h3 id=\"security-logging-and-monitoring-failures\">Security Logging and Monitoring Failures<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#security-logging-and-monitoring-failures\"></a></h3>\n<p>Without proper logging and monitoring, detecting and responding to security incidents becomes challenging.</p>\n<h4 id=\"example-7\">Example:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-7\"></a></h4>\n<ul>\n<li>Failing to log failed login attempts, making it difficult to identify and respond to a brute-force attack.</li>\n</ul>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden 🌱\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}