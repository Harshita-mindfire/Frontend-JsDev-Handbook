{"pageProps":{"note":{"id":"93ayje8gc8rss7fkdkccs9a","title":"Vite","desc":"","updated":1687094346523,"created":1687094346523,"custom":{},"fname":"learning.vite","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"90d881893e57f0a2e3cddfc1e2546513","links":[],"anchors":{"blog-post":{"type":"header","text":"Blog post","value":"blog-post","line":8,"column":0,"depth":2},"start":{"type":"header","text":"Start","value":"start","line":16,"column":0,"depth":2},"configure-port":{"type":"header","text":"Configure port","value":"configure-port","line":19,"column":0,"depth":2},"env-variables":{"type":"header","text":"Env variables","value":"env-variables","line":30,"column":0,"depth":2},"vite-vs-traditional-module-bundlers":{"type":"header","text":"Vite vs traditional module bundlers","value":"vite-vs-traditional-module-bundlers","line":44,"column":0,"depth":2}},"children":[],"parent":"trkx8xrg7g2fm023ez4ldqj","data":{}},"body":"<h1 id=\"vite\">Vite<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vite\"></a></h1>\n<h2 id=\"blog-post\">Blog post<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#blog-post\"></a></h2>\n<ul>\n<li>\n<p><a href=\"https://www.traversymedia.com/blog/vite-crash-course\">Vite Crash Course Blog</a></p>\n</li>\n<li>\n<p>npx create-vite-app my-app --template react-ts</p>\n</li>\n<li>\n<p>dev server</p>\n</li>\n<li>\n<p>when we build, vite uses <code>Rollup</code> (module bundler) to bundle files for production.</p>\n</li>\n<li>\n<p>fast</p>\n</li>\n<li>\n<p>Sass support is built into Vite</p>\n</li>\n</ul>\n<h2 id=\"start\">Start<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#start\"></a></h2>\n<p>npm init vite@latest vite-project</p>\n<h2 id=\"configure-port\">Configure port<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configure-port\"></a></h2>\n<p>We can also change some settings, including the port that the development server runs on. By default, it runs on port 5173. I prefer port 3000, so I'm going to change it to that.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">react</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">server</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"env-variables\">Env variables<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#env-variables\"></a></h2>\n<p>Just like CRA, Vite supports environment variables. We can create a .env file in the root of our project. We can then add environment variables to this file. They must begin with VITE_. Let's create one called VITE_API_KEY and set it to 123456789.</p>\n<pre class=\"language-.env\"><code class=\"language-.env\">VITE_API_KEY=123456789\n</code></pre>\n<p>Now, let's go into the header and try to access this environment variable. We can do this by using the import.meta.env object.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\"><span class=\"token maybe-class-name\">Header</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">&#x3C;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword module\">import</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">meta</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">env</span><span class=\"token punctuation\">.</span><span class=\"token constant\">VITE_API_KEY</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>export default Header;</p>\n<h2 id=\"vite-vs-traditional-module-bundlers\">Vite vs traditional module bundlers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vite-vs-traditional-module-bundlers\"></a></h2>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/vite-vs-others.png\" alt=\"vite vs other module bundlers\"></p>\n<ul>\n<li>in development, it doesnot rebundle everything everytime you make a change. instead, it takes advantage of native ES modules in the browser. In modern browsers you can use the ES modules(import/export syntax)\nIt add scripts as </li>\n</ul>\n<pre><code>&#x3C;script type=\"module\" src=\"main.js\">\n</code></pre>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}