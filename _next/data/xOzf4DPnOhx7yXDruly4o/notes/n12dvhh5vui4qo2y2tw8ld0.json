{"pageProps":{"note":{"id":"n12dvhh5vui4qo2y2tw8ld0","title":"Doubts","desc":"","updated":1682931264514,"created":1682931264514,"custom":{},"fname":"learning.nextjs.doubts","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"7c84134c9e3f4e70f2cf170f96b41f5f","links":[],"anchors":{},"children":[],"parent":"w1drku1nbeoq0yf2h0ii7lx","data":{}},"body":"<h1 id=\"doubts\">Doubts<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#doubts\"></a></h1>\n<ul>\n<li><strong>Question</strong>\nIn nextjs, how does getStaticPath() returning {fallback: true} differ from getServerSideProps? Isn't both of them generate pages just in time? Why do we need getServerSideProps if fallback true does the exact same thing?</li>\n</ul>\n<p><strong>Answer</strong></p>\n<p>While <code>{fallback: true}</code> and <code>getServerSideProps</code> both generate pages dynamically at runtime, they have some important differences that make them better suited for different use cases.</p>\n<p>Firstly, <code>{fallback: true}</code> is typically used for generating pages for dynamic routes that have a large number of possible values, but only a small subset of those values are actually used frequently. In this case, it's not practical to pre-render all possible values at build-time because it would take too long or consume too much resources. Instead, using <code>{fallback: true}</code> allows you to pre-render only the most frequently used values at build-time, and generate the remaining pages on-demand at runtime. This can lead to faster build times and reduced resource usage.</p>\n<p>On the other hand, <code>getServerSideProps</code> is useful when you need to generate pages that require data that can't be pre-fetched at build-time. For example, if you have a page that shows real-time data or user-specific data, you can use <code>getServerSideProps</code> to fetch the necessary data at runtime and generate the page on the server-side. This ensures that the page always shows the most up-to-date information.</p>\n<p>Additionally, <code>getServerSideProps</code> gives you more control over the page generation process. With <code>{fallback: true}</code>, you have less control over the timing and order of page generation, and you can't do things like server-side rendering conditional content. With <code>getServerSideProps</code>, you have full control over the data fetching and rendering process, and can generate pages with more complex logic.</p>\n<p>In summary, while <code>{fallback: true}</code> and <code>getServerSideProps</code> can both generate pages dynamically at runtime, they are better suited for different use cases. <code>{fallback: true}</code> is useful for generating pages for dynamic routes with a large number of possible values, while <code>getServerSideProps</code> is useful for generating pages that require real-time or user-specific data, or that have more complex rendering logic.</p>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}