{"pageProps":{"note":{"id":"bissfxn4ra3hsnuvit2fzl6","title":"Layouts","desc":"","updated":1751290471741,"created":1751290471741,"custom":{},"fname":"learning.nextjs.routing.layouts","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"b54d4ab726a3f1b85d0f7a2462739979","links":[{"type":"ref","from":{"fname":"learning.nextjs.routing.layouts","id":"bissfxn4ra3hsnuvit2fzl6","vaultName":"Harshita-notes"},"value":"learning.nextjs.routing.error-handling","position":{"start":{"line":77,"column":3,"offset":1644},"end":{"line":77,"column":73,"offset":1714},"indent":[]},"xvault":false,"to":{"fname":"learning.nextjs.routing.error-handling","anchorHeader":"handling-errors-in-layouts"}}],"anchors":{"creation":{"type":"header","text":"Creation","value":"creation","line":11,"column":0,"depth":2},"nested-layout":{"type":"header","text":"Nested Layout","value":"nested-layout","line":54,"column":0,"depth":2},"multiple-root-layout":{"type":"header","text":"Multiple root layout.","value":"multiple-root-layout","line":57,"column":0,"depth":2},"handling-errors":{"type":"header","text":"Handling errors","value":"handling-errors","line":82,"column":0,"depth":2}},"children":[],"parent":"vh28j803j8gmx35nymyloxt","data":{}},"body":"<h1 id=\"layouts\">Layouts<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#layouts\"></a></h1>\n<ul>\n<li>Pages are route specific UI components</li>\n<li>Layouts is a UI that is shared between multiple pages in your app like header, footer etc.</li>\n</ul>\n<h2 id=\"creation\">Creation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#creation\"></a></h2>\n<ul>\n<li>default export a react component from <code>layout.tsx</code> file.</li>\n<li>takes a children prop populated with page content.</li>\n</ul>\n<p>eg: root layout. any structure in here goes to all the pages.\nThe children prop changes based on the route accessed.</p>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\"><span class=\"token maybe-class-name\">RootLayout</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  children<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  children<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">ReactNode</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>header</span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"#f4f9f7\"</span><span class=\"token punctuation\">,</span>\n            textAlign<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n            padding<span class=\"token operator\">:</span> <span class=\"token string\">\"1rem\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Header\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>header</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>footer</span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            backgroundColor<span class=\"token operator\">:</span> <span class=\"token string\">\"ghostwhite\"</span><span class=\"token punctuation\">,</span>\n            textAlign<span class=\"token operator\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span>\n            padding<span class=\"token operator\">:</span> <span class=\"token string\">\"1rem\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Footer\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>footer</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h2 id=\"nested-layout\">Nested Layout<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nested-layout\"></a></h2>\n<p>layout.tsx inside a route is specific for that route.</p>\n<h2 id=\"multiple-root-layout\">Multiple root layout.<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multiple-root-layout\"></a></h2>\n<p>If we want let say 2 of our route to have one layout and all the others to have another, we would require multiple root layouts,\nfor this, we take help of router groups.</p>\n<p>Eg: we need only footer for login and register route, for customers, we want both header and footer.</p>\n<pre class=\"language-figma\"><code class=\"language-figma\">- app\n  - (auth)\n    - login\n      - page.tsx\n    - register\n      - page.tsx\n    layout.tsx //AuthRootLayout\n  - (marketing)\n    - customers\n      - page.tsx\n    - suppliers\n      - page.tsx\n    - page.tsx //global entry page\n    - layout.tsx //MarketingRootLayout\n</code></pre>\n<h2 id=\"handling-errors\">Handling errors<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#handling-errors\"></a></h2>\n<ul>\n<li><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Error Handling</span></div>\n<a href=\"/Frontend-JsDev-Handbook/notes/byz0xlauc4njcaf9hmt13b3\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"handling-errors-in-layouts\">Handling errors in layouts<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#handling-errors-in-layouts\"></a></h2>\n<ul>\n<li>The error boundary won't catch error thrown in layout.tsx within the same segment(in the same folder) because of the component rendering hierarchy.</li>\n<li>layout sits above the error boundry in the component tree.</li>\n<li>to resolve, move the error boundry at the parent of layout.</li>\n</ul>\n<p>So how do we handle errors that are thrown from root layout? Since it does not have a parent, how do we catch it?</p>\n<p>via <strong>global-error.tsx</strong> that sits in the root directory. </p>\n</div></div><p></p></li>\n</ul>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}