{"pageProps":{"note":{"id":"cok7r8be46nqy5mzl65l8l9","title":"Metadata","desc":"","updated":1751368289513,"created":1751368289513,"custom":{},"fname":"learning.nextjs.routing.metadata","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"55411f6b01efef57f2289bac6435f2ba","links":[],"anchors":{"routing-metadata":{"type":"header","text":"Routing metadata","value":"routing-metadata","line":7,"column":0,"depth":1},"configuring-metadata":{"type":"header","text":"Configuring metadata","value":"configuring-metadata","line":14,"column":2,"depth":2},"static-metadata":{"type":"header","text":"Static metadata","value":"static-metadata","line":21,"column":0,"depth":3},"dynamic-metadata":{"type":"header","text":"Dynamic metadata","value":"dynamic-metadata","line":29,"column":0,"depth":3},"title-metadata":{"type":"header","text":"Title metadata","value":"title-metadata","line":48,"column":2,"depth":2},"string-title":{"type":"header","text":"String title","value":"string-title","line":57,"column":0,"depth":3},"object-title":{"type":"header","text":"Object title","value":"object-title","line":63,"column":0,"depth":3}},"children":[],"parent":"vh28j803j8gmx35nymyloxt","data":{}},"body":"<h1 id=\"metadata\">Metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#metadata\"></a></h1>\n<h1 id=\"routing-metadata\">Routing metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#routing-metadata\"></a></h1>\n<ul>\n<li>\n<p>metadata api is powerful feature that lets us define metadata for each page(good for SEO)</p>\n</li>\n<li>\n<p>2 ways to handle metadata in layout.tsx or page.tsx files.</p>\n<ul>\n<li>static metadata object</li>\n<li>dynamic generateMetadata function</li>\n</ul>\n<h2 id=\"configuring-metadata\">Configuring metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configuring-metadata\"></a></h2>\n<p><strong>metadata rules</strong></p>\n<ul>\n<li>both layout, page.tsx can export metadata. Layout metadata applies to all its pages, while page metadata is applied tp that page.</li>\n<li>metadata follows top-down order. starting from root level.</li>\n<li>they merge together if metadata exists in multiple pages. For matching properties the page metadata overrides layout metadata.</li>\n<li>does not work with client components(that have use-client directive). To handle metadata in client components, separate the logic that requires client component as a separate component and import it in page.tsx.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"static-metadata\">Static metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#static-metadata\"></a></h3>\n<pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\ntitle<span class=\"token operator\">:</span> <span class=\"token string\">\"Next.js\"</span><span class=\"token punctuation\">,</span>\ndescription<span class=\"token operator\">:</span> <span class=\"token string\">\"Generated by Next.js\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"dynamic-metadata\">Dynamic metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dynamic-metadata\"></a></h3>\n<ul>\n<li>\n<p>when metadata is dependent on dynamic info like current route params, external data or metadata defined in parent segments.</p>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Metadata</span><span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">\"next\"</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> generateMetadata <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>params<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Props</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Metadata</span><span class=\"token operator\">></span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> id<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword control-flow\">await</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">productId</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Product </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">Props</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  params<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">{</span>productId<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"title-metadata\">Title metadata<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#title-metadata\"></a></h2>\n<p>The title property in metadata can be defined as :</p>\n</li>\n<li>\n<p>a string</p>\n</li>\n<li>\n<p>an object : it can have 3 keys:</p>\n<pre><code>- default\n- template\n- absolute\n</code></pre>\n</li>\n</ul>\n<h3 id=\"string-title\">String title<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#string-title\"></a></h3>\n<pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\ntitle<span class=\"token operator\">:</span> <span class=\"token string\">\"Next.js\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"object-title\">Object title<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#object-title\"></a></h3>\n<ul>\n<li><strong>default</strong>: the default title is defined in layout.tsx, the children page that does not have a title metadata, defaults to this value.</li>\n</ul>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Next.js Tutorial\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul>\n<li><strong>template</strong> : Consistent way of formatting the title. It allows us to have prefix/suffix.\nfor eg, if the layout.tsx has the following metadata</li>\n</ul>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Next.js Tutorial\"</span><span class=\"token punctuation\">,</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">\"%s | ByteSizedFrontend\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Now if the children page has title metadata = \"Routing\", the title in the actual page metadata will come as: <code>Routing | ByteSizedFrontend</code></p>\n<ul>\n<li><strong>absolute</strong>: to breakthrough the template, use absolute in children route metadata\nfor eg, if the layout metadata remains same as above and I have the child page.tsx as:</li>\n</ul>\n<pre class=\"language-tsx\"><code class=\"language-tsx\">  <span class=\"token keyword module\">export</span> <span class=\"token keyword\">const</span> metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    absolute<span class=\"token operator\">:</span> <span class=\"token string\">\"Routing example\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>The final title would appear as <code>Routing example</code>.</p>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden 🌱\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}