{"pageProps":{"note":{"id":"w5l9zvdha3es8jaxge5e4lu","title":"TypeScript","desc":"","updated":1683533919973,"created":1683533919973,"custom":{},"fname":"learning.typescript","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"9259a6c666e8b200c442fbace03b2242","links":[{"type":"wiki","from":{"fname":"learning.typescript","id":"w5l9zvdha3es8jaxge5e4lu","vaultName":"Harshita-notes"},"value":"learning.typescript","alias":"ts-node","position":{"start":{"line":19,"column":8,"offset":625},"end":{"line":19,"column":47,"offset":664},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"learning.typescript","anchorHeader":"ts-node"}},{"from":{"fname":"learning.typescript","id":"w5l9zvdha3es8jaxge5e4lu","vaultName":"Harshita-notes"},"type":"backlink","position":{"start":{"line":19,"column":8,"offset":625},"end":{"line":19,"column":47,"offset":664},"indent":[]},"value":"learning.typescript"}],"anchors":{"react-with-typescript-cheatsheet":{"type":"header","text":"React with Typescript Cheatsheet","value":"react-with-typescript-cheatsheet","line":9,"column":0,"depth":2},"ts":{"type":"header","text":"TS","value":"ts","line":12,"column":0,"depth":2},"creating-nodejs-application-with-typescript-config":{"type":"header","text":"Creating nodejs application with typescript config","value":"creating-nodejs-application-with-typescript-config","line":17,"column":0,"depth":2},"ts-node":{"type":"header","text":"ts-node","value":"ts-node","line":27,"column":0,"depth":2},"types":{"type":"header","text":"Types","value":"types","line":34,"column":0,"depth":2}},"children":["qdnhxg5v4oukw5hsc6xc6li","e85c7nd0rt2fnlb7zu3xnz3","2b35ixagticlchpxb121vfm","gqbkj2606jvpreq2kgwp6g3","acgxmxarkrk4damtk0dz3we","g8etjorczrqedoptssxdooy","nman3njbtx3ty2ghrjyy822","a1g7oejylvpmgq8v43wwlqm"],"parent":"trkx8xrg7g2fm023ez4ldqj","data":{}},"body":"<h1 id=\"typescript\">TypeScript<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#typescript\"></a></h1>\n<h2 id=\"react-with-typescript-cheatsheet\">React with Typescript Cheatsheet<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#react-with-typescript-cheatsheet\"></a></h2>\n<ul>\n<li><a href=\"https://react-typescript-cheatsheet.netlify.app/docs/basic/setup\">https://react-typescript-cheatsheet.netlify.app/docs/basic/setup</a></li>\n</ul>\n<h2 id=\"ts\">TS<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ts\"></a></h2>\n<ul>\n<li>superset of javascript.</li>\n<li>can't be executed by JS environment (browsers, nodejs)</li>\n</ul>\n<h2 id=\"creating-nodejs-application-with-typescript-config\">Creating nodejs application with typescript config<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#creating-nodejs-application-with-typescript-config\"></a></h2>\n<ol>\n<li>npm init -y</li>\n<li>save typescript as dev dependency: <code>npm i -D typescript</code></li>\n<li>Create tsconfig.json: <code>npx tsc --init</code>.</li>\n<li>Mark <code>\"esModuleInterop\": true</code> in tsconfig.json to support import syntax</li>\n<li><code>tsc</code> will compile typescript files to js, you can configure tsconfig.json's <code>outDir</code> property to provide path for transpiled files.</li>\n<li><code>tsc -w</code> will watch for changes.</li>\n<li>use <a href=\"/Frontend-JsDev-Handbook/notes/w5l9zvdha3es8jaxge5e4lu#ts-node\">ts-node</a> and nodemon in dev environment.</li>\n</ol>\n<h2 id=\"ts-node\">ts-node<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ts-node\"></a></h2>\n<p>The ts-node library is a TypeScript execution and REPL (Read-Eval-Print Loop) for Node.js. It allows you to directly run TypeScript code without explicitly compiling it to JavaScript.</p>\n<p>When you run a TypeScript file using the ts-node library, it dynamically compiles the TypeScript code on-the-fly and executes it in the Node.js runtime environment. This eliminates the need to manually compile the TypeScript code before running it with Node.js.</p>\n<h2 id=\"types\">Types<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#types\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//array</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">arr</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">//fixed length array is called tuple in ts</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">tuple</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">//rest parameter any number of parameters to a function</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token spread operator\">...</span>values<span class=\"token operator\">:</span>number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> values<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span>currentVal</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span>acc<span class=\"token operator\">+</span>currentVal<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//structural typing : duck typing </span>\ntype <span class=\"token maybe-class-name\">Point2D</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">}</span>\ntype <span class=\"token maybe-class-name\">Point3D</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Point2D</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Point3D</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n\na<span class=\"token operator\">=</span>b\n\n<span class=\"token comment\">//Generics</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Queue</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n<span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">item</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token operator\">|</span><span class=\"token keyword nil\">undefined</span><span class=\"token punctuation\">{</span><span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> queue<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Queue</span><span class=\"token operator\">&#x3C;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//any unknown unknown is a type safe version of any</span>\n\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">delay</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">ms</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token arrow operator\">=></span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span>ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mainAsync</span><span class=\"token operator\">=</span><span class=\"token keyword\">async</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//literal types</span>\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">direction</span><span class=\"token operator\">:</span> <span class=\"token string\">'North'</span><span class=\"token operator\">|</span><span class=\"token string\">'South'</span><span class=\"token operator\">|</span><span class=\"token string\">'East'</span><span class=\"token operator\">|</span><span class=\"token string\">'West'</span>\n\n<span class=\"token comment\">//typeof for primitive, instanceof for class object , in for property in object without new</span>\n\n<span class=\"token comment\">//discriminated unions</span>\n\ntype <span class=\"token maybe-class-name\">Square</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span><span class=\"token string\">'square'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span>number\n<span class=\"token punctuation\">}</span>\ntype <span class=\"token maybe-class-name\">Rectangle</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span><span class=\"token string\">'rectangle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span>number\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//never</span>\ntype <span class=\"token maybe-class-name\">Shape</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">Square</span><span class=\"token operator\">|</span><span class=\"token maybe-class-name\">Rectangle</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">area</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">s</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Shape</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token property-access\">kind</span><span class=\"token operator\">===</span><span class=\"token string\">'square'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span>  s<span class=\"token punctuation\">.</span><span class=\"token property-access\">size</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">.</span><span class=\"token property-access\">size</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token property-access\">kind</span><span class=\"token operator\">===</span><span class=\"token string\">'rectangle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> <span class=\"token literal-property property\">_ensureAllCasesAreHandled</span><span class=\"token operator\">:</span>never<span class=\"token operator\">=</span>s\n    <span class=\"token keyword control-flow\">return</span> _ensureAllCasesAreHandled\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//assert function</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">condition</span><span class=\"token operator\">:</span>unknown<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span>string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> asserts condition<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>condition<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">assertDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span>unknown</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> asserts value is <span class=\"token known-class-name class-name\">Date</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>value <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token keyword control-flow\">return</span>\n    <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value is not a date'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\">//read-only </span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sortReverse</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">input</span> <span class=\"token operator\">:</span> readonly number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> input<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> start<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> end<span class=\"token operator\">=</span><span class=\"token function\">sortReverse</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span>\n\ntype <span class=\"token maybe-class-name\">Point</span><span class=\"token operator\">=</span> readonly <span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">movePoint</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">point</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Point</span><span class=\"token punctuation\">,</span><span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span>number<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span>number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Point</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>point<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>x<span class=\"token punctuation\">,</span>point<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>y<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//const assertion</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">layout</span><span class=\"token punctuation\">(</span>settings<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span><span class=\"token string\">'left'</span><span class=\"token operator\">|</span><span class=\"token string\">'center'</span><span class=\"token operator\">|</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span>number\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'performing layout'</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> example<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">align</span><span class=\"token operator\">:</span><span class=\"token string\">'left'</span><span class=\"token keyword module\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span><span class=\"token number\">10</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">layout</span><span class=\"token punctuation\">(</span>example<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//lookup types</span>\ntype nestedJson<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">prop1</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">prop2</span><span class=\"token operator\">:</span>string\n        <span class=\"token literal-property property\">prop3</span><span class=\"token operator\">:</span>number\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token literal-property property\">prop4</span><span class=\"token operator\">:</span>boolean\n<span class=\"token punctuation\">}</span>\n\ntype lookupProp<span class=\"token operator\">=</span>nestedJson<span class=\"token punctuation\">[</span><span class=\"token string\">\"prop1\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">//conditional types </span>\n<span class=\"token keyword module\">export</span> type <span class=\"token maybe-class-name\">TypeName</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span> \n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">?</span><span class=\"token string\">\"string\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">number</span><span class=\"token operator\">?</span><span class=\"token string\">\"number\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">boolean</span><span class=\"token operator\">?</span><span class=\"token string\">\"boolean\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">undefined</span><span class=\"token operator\">?</span><span class=\"token string\">\"undefined\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">symbol</span><span class=\"token operator\">?</span><span class=\"token string\">\"symbol\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">bigint</span><span class=\"token operator\">?</span><span class=\"token string\">\"bigint\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Function</span><span class=\"token operator\">?</span><span class=\"token string\">\"function\"</span><span class=\"token operator\">:</span>\n<span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">null</span><span class=\"token operator\">?</span><span class=\"token string\">\"null\"</span><span class=\"token operator\">:</span>\n<span class=\"token string\">\"object\"</span>\n\n<span class=\"token keyword\">function</span> typeName<span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">TypeName</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">typeof</span> t <span class=\"token keyword module\">as</span> <span class=\"token maybe-class-name\">TypeName</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> str<span class=\"token operator\">=</span><span class=\"token function\">typeName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//infer</span>\ntype isArray<span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token operator\">?</span><span class=\"token string\">\"array\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"object\"</span>\n\ntype <span class=\"token maybe-class-name\">MemberOfArray</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span> <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&#x3C;</span>infer <span class=\"token constant\">M</span><span class=\"token operator\">></span><span class=\"token operator\">?</span><span class=\"token constant\">M</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span>\n\ntype <span class=\"token maybe-class-name\">UnboxArray</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">MemberOfArray</span><span class=\"token operator\">&#x3C;</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>\ntype <span class=\"token maybe-class-name\">Anything</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">MemberOfArray</span><span class=\"token operator\">&#x3C;</span>string<span class=\"token operator\">></span>\n\n<span class=\"token comment\">//Return typeof when output of one function is the input of another</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createPerson</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span>string<span class=\"token punctuation\">,</span><span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span>string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">{</span>\n    firstName<span class=\"token punctuation\">,</span>\n    lastName<span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">fullName</span><span class=\"token operator\">:</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">logPerson</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">person</span><span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">ReturnType</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">typeof</span> createPerson<span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person\"</span><span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">.</span><span class=\"token property-access\">firstName</span><span class=\"token punctuation\">,</span>person<span class=\"token punctuation\">.</span><span class=\"token property-access\">lastName</span><span class=\"token punctuation\">,</span>person<span class=\"token punctuation\">.</span><span class=\"token property-access\">fullName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Mapped types loop over union of keys</span>\ntype <span class=\"token maybe-class-name\">Point1</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span>number\n    <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span>number\n    <span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span>number\n<span class=\"token punctuation\">}</span>\n\ntype <span class=\"token maybe-class-name\">ReadOnlyPoint</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">{</span>\n    readonly <span class=\"token punctuation\">[</span>item <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token literal-property property\">center</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">ReadOnlyPoint</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Point1</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">z</span><span class=\"token operator\">:</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//template literal</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">templateLiteral</span><span class=\"token operator\">:</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">example </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>string<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\ntemplateLiteral<span class=\"token operator\">=</span><span class=\"token string\">'example hello'</span>\n\ntype <span class=\"token maybe-class-name\">CSSValue</span><span class=\"token operator\">=</span>number<span class=\"token operator\">|</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>number<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">|</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>number<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">rem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">|</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>number<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">em</span><span class=\"token template-punctuation string\">`</span></span>\n\n<span class=\"token keyword\">let</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">CSSValue</span><span class=\"token operator\">=</span><span class=\"token string\">'12px'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">CSSValue</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">typeof</span> value<span class=\"token operator\">===</span><span class=\"token string\">'number'</span><span class=\"token operator\">?</span>value<span class=\"token operator\">+</span><span class=\"token string\">'px'</span><span class=\"token operator\">:</span>value\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1rem'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1px'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//Partial make all members optional</span>\ntype <span class=\"token maybe-class-name\">PartialPoint</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">Partial</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Point1</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\">//Required make all members required</span>\ntype <span class=\"token maybe-class-name\">RequiredConfig</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">Required</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Point3D</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\">//Readonly makes all members read only</span>\ntype <span class=\"token maybe-class-name\">ReadonlyPoint</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">Readonly</span><span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Point2D</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> example1<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> makeReadonly<span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">:</span><span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">Readonly</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">freeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token spread operator\">...</span>t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nexample1<span class=\"token punctuation\">.</span><span class=\"token property-access\">x</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n\n<span class=\"token keyword\">const</span> example2<span class=\"token operator\">=</span><span class=\"token function\">makeReadonly</span><span class=\"token punctuation\">(</span>example1<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//example2.x=2</span>\n\n<span class=\"token comment\">//Record</span>\n\ntype <span class=\"token maybe-class-name\">PageInfo</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span>number\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span>string\n<span class=\"token punctuation\">}</span>\n\ntype <span class=\"token maybe-class-name\">PageVerbose</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">home</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">PageInfo</span>\n    <span class=\"token literal-property property\">services</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">PageInfo</span>\n    <span class=\"token literal-property property\">about</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">PageInfo</span>\n    <span class=\"token literal-property property\">contact</span><span class=\"token operator\">:</span><span class=\"token maybe-class-name\">PageInfo</span>\n<span class=\"token punctuation\">}</span>\ntype <span class=\"token maybe-class-name\">Pages</span><span class=\"token operator\">=</span><span class=\"token maybe-class-name\">Record</span><span class=\"token operator\">&#x3C;</span><span class=\"token string\">'page'</span><span class=\"token operator\">|</span><span class=\"token string\">'services'</span><span class=\"token operator\">|</span><span class=\"token string\">'about'</span><span class=\"token operator\">|</span><span class=\"token string\">'contact'</span><span class=\"token punctuation\">,</span><span class=\"token maybe-class-name\">PageInfo</span><span class=\"token operator\">></span>\n\n\n<span class=\"token comment\">//Mapped type as clauses</span>\ntype <span class=\"token maybe-class-name\">State</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span>string\n    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span>number\n<span class=\"token punctuation\">}</span>\n\ntype <span class=\"token maybe-class-name\">Setter</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>k <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span> <span class=\"token operator\">&#x26;</span> string <span class=\"token keyword module\">as</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">set</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">Capitalize</span><span class=\"token operator\">&#x3C;</span>k<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span>\n\ntype <span class=\"token maybe-class-name\">Getter</span><span class=\"token operator\">&#x3C;</span><span class=\"token constant\">T</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>k <span class=\"token keyword\">in</span> keyof <span class=\"token constant\">T</span> <span class=\"token operator\">&#x26;</span> string <span class=\"token keyword module\">as</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">get</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token maybe-class-name\">Capitalize</span><span class=\"token operator\">&#x3C;</span>k<span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token arrow operator\">=></span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/qdnhxg5v4oukw5hsc6xc6li\">Advance Types</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/e85c7nd0rt2fnlb7zu3xnz3\">Basic Types</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/2b35ixagticlchpxb121vfm\">Classes</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/gqbkj2606jvpreq2kgwp6g3\">Compiler</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/acgxmxarkrk4damtk0dz3we\">Decorartors</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/g8etjorczrqedoptssxdooy\">Generics</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/nman3njbtx3ty2ghrjyy822\">Interfaces</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/a1g7oejylvpmgq8v43wwlqm\">React</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/w5l9zvdha3es8jaxge5e4lu\">TypeScript</a></li>\n</ul>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden 🌱\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}