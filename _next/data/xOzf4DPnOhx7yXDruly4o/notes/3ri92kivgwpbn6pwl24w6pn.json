{"pageProps":{"note":{"id":"3ri92kivgwpbn6pwl24w6pn","title":"Vanilla JS","desc":"","updated":1692599485870,"created":1692599485870,"custom":{},"fname":"learning.vanilla-js","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"779d5e4d62bfaa541b416ec0a2306aaf","links":[],"anchors":{"ques":{"type":"header","text":"Ques:","value":"ques","line":7,"column":0,"depth":2},"ans":{"type":"header","text":"Ans","value":"ans","line":14,"column":0,"depth":2}},"children":[],"parent":"trkx8xrg7g2fm023ez4ldqj","data":{}},"body":"<h1 id=\"vanilla-js\">Vanilla JS<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#vanilla-js\"></a></h1>\n<h2 id=\"ques\">Ques:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ques\"></a></h2>\n<ul>\n<li>Create a vanilla js application that consumes the <a href=\"https://fakestoreapi.com/products?sort=asc\">https://fakestoreapi.com/products?sort=asc</a> API\nand displays a list of products in ascending order based on id.\nThe application should also include a dropdown to allow the user to change the sorting of the products between ascending and descending.\nWhen the user changes the sorting order, the application should update the query parameter value and fetch the products with the new sorting order.</li>\n</ul>\n<h2 id=\"ans\">Ans<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ans\"></a></h2>\n<ul>\n<li>HTML </li>\n</ul>\n<pre class=\"language-html\"><code class=\"language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>select</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>asc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Asc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>desc<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Desc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>select</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<ul>\n<li>JS</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token keyword\">const</span> getProducts <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>sortOrder<span class=\"token operator\">=</span><span class=\"token string\">\"asc\"</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://fakestoreapi.com/products?sort=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sortOrder<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> productList <span class=\"token operator\">=</span> <span class=\"token keyword control-flow\">await</span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> test <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".container\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     body<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">removeChild</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">const</span> container <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   container<span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"container\"</span><span class=\"token punctuation\">)</span>\n   productList<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> parent <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     parent<span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parent\"</span><span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">const</span> card <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">const</span> imageCard <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     imageCard<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     imageCard<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">width</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"50px\"</span><span class=\"token punctuation\">;</span>\n     imageCard<span class=\"token punctuation\">.</span><span class=\"token property-access\">style</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">height</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"60px\"</span><span class=\"token punctuation\">;</span>\n     card<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>imageCard<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">const</span> titleSpan <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     titleSpan<span class=\"token punctuation\">.</span><span class=\"token property-access\">innerHTML</span> <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n     parent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>card<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     parent<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>titleSpan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     container<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n   body<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">appendChild</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">)</span>\n\n <span class=\"token punctuation\">}</span>\n <span class=\"token function\">getProducts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n   <span class=\"token keyword\">const</span> select <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  select<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getProducts</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul>\n<li>CSS </li>\n</ul>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\"><span class=\"token class\">.container</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\"><span class=\"token class\">.parent</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token unit\">rem</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden 🌱\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}