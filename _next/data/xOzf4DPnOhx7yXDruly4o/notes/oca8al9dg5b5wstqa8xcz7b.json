{"pageProps":{"note":{"id":"oca8al9dg5b5wstqa8xcz7b","title":"Performance","desc":"","updated":1649614685015,"created":1648993685432,"custom":{},"fname":"learning.react.performance","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"8d237023c3451e312959bd3608bbc03f","links":[],"anchors":{"performance":{"type":"header","text":"Performance","value":"performance","line":8,"column":0,"depth":1},"memoisation":{"type":"header","text":"Memoisation","value":"memoisation","line":11,"column":0,"depth":2},"reactmemo":{"type":"header","text":"React.memo","value":"reactmemo","line":14,"column":0,"depth":3},"functional-component":{"type":"header","text":"Functional Component","value":"functional-component","line":17,"column":0,"depth":4},"class-component":{"type":"header","text":"Class Component","value":"class-component","line":22,"column":0,"depth":4},"usecallback-hook":{"type":"header","text":"useCallback hook","value":"usecallback-hook","line":25,"column":0,"depth":3},"usememo-hook":{"type":"header","text":"useMemo hook","value":"usememo-hook","line":35,"column":0,"depth":3},"code-splitting":{"type":"header","text":"Code splitting","value":"code-splitting","line":39,"column":0,"depth":2},"suspense":{"type":"header","text":"Suspense","value":"suspense","line":47,"column":0,"depth":2}},"children":["3uby22vvqaqekxnnpmi3kiw"],"parent":"8fp89ktw3fhi2p6bt35b5ju","data":{}},"body":"<h1 id=\"performance\">Performance<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#performance\"></a></h1>\n<h1 id=\"performance-1\">Performance<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#performance-1\"></a></h1>\n<p>For every state update, React component re-renders. When the parent component re-renders, all its children are re-rendered. This causes a performance issue. To minimize re-rendering of Components which are unaffected by the state change, we use advance concepts like memoization.</p>\n<h2 id=\"memoisation\">Memoisation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#memoisation\"></a></h2>\n<ul>\n<li>If the props of Child Component does not change, it will not rerender along with the Parent.</li>\n</ul>\n<h3 id=\"reactmemo\">React.memo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reactmemo\"></a></h3>\n<p>Memoizes a component.</p>\n<h4 id=\"functional-component\">Functional Component<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#functional-component\"></a></h4>\n<p>Wrap component in React.memo() while exporting for functional component.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Card</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Card is name of component</span>\n</code></pre>\n<h4 id=\"class-component\">Class Component<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-component\"></a></h4>\n<p>Extend React.PureComponent instead of React.Component</p>\n<h3 id=\"usecallback-hook\">useCallback hook<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usecallback-hook\"></a></h3>\n<p>It returns a memoized version of the callback that only changes if one of the dependencies has changed. This is necessary when App sends callback as a Prop to child.</p>\n<ul>\n<li>Rule of Thumb: always wrap <em>the function in useCallback</em> which is passed as a prop if the <strong>component is memoized</strong>.</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> handleChange <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setSearchKey</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"usememo-hook\">useMemo hook<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usememo-hook\"></a></h3>\n<p>useMemo will only recompute the memoized value when one of the dependencies has changed. This optimization helps to avoid expensive calculations on every render.</p>\n<h2 id=\"code-splitting\">Code splitting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#code-splitting\"></a></h2>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">OtherComponent</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">After</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">OtherComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword module\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"suspense\">Suspense<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#suspense\"></a></h2>\n<pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span>\n\n</code></pre>\n<ul>\n<li>Suspense component will be rendered when a child ran into async render and all children in Suspense will be re-rendered after async resolve.\neg: <a href=\"https://bigfrontend.dev/react-quiz/suspense-3\">https://bigfrontend.dev/react-quiz/suspense-3</a></li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/3uby22vvqaqekxnnpmi3kiw\">Re Rendering</a></li>\n</ol>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}