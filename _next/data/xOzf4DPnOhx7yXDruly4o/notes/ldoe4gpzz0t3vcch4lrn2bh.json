{"pageProps":{"note":{"id":"ldoe4gpzz0t3vcch4lrn2bh","title":"Intercepted Routes","desc":"","updated":1753097795738,"created":1753097795738,"custom":{},"fname":"learning.nextjs.routing.parallel-routes.intercepted-routes","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"425ccaf7f59f6c2a21da60b261cf2ab4","links":[],"anchors":{"conventions":{"type":"header","text":"Conventions","value":"conventions","line":15,"column":0,"depth":2}},"children":[],"parent":"uknad7zvwt0vmshlus5jkrm","data":{}},"body":"<h1 id=\"intercepted-routes\">Intercepted Routes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#intercepted-routes\"></a></h1>\n<ul>\n<li>advanced routing mechanism that allows you to load a route from another part of application within current layout.</li>\n<li>particularly useful when you want to display new content while keeping ypur user in same context.</li>\n<li>let you show alternate UI by preserving context but defaults to the standard UI on direct page loads.</li>\n<li><strong>intercepting routes are created in source folder</strong></li>\n<li>these routes <strong>require a specific prefix</strong> based on below conventions.</li>\n</ul>\n<h2 id=\"conventions\">Conventions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conventions\"></a></h2>\n<ul>\n<li>use (.) to match segments at same level</li>\n<li>use (..) to match one level above \n<blockquote>\n<p>similar to how we relative import files ./file.tsx for same level, ../file.tsx on level above</p>\n</blockquote>\n</li>\n<li>use (..)(..) to match 2 level above</li>\n<li>use (...) to match segments from root app directory.</li>\n</ul>\n<pre class=\"language-graphql\"><code class=\"language-graphql\">\n<span class=\"token property\">app</span>/\nâ”œâ”€â”€ <span class=\"token property\">layout</span>.<span class=\"token property\">js</span>\nâ”œâ”€â”€ <span class=\"token property\">folder1</span>\nâ”‚   â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   â””â”€â”€ <span class=\"token punctuation\">(</span>..<span class=\"token punctuation\">)</span><span class=\"token property\">f3</span> // <span class=\"token property\">intercepting</span> <span class=\"token property\">route</span> <span class=\"token property\">for</span> <span class=\"token property\">f3</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>      â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span> \n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   â””â”€â”€ <span class=\"token punctuation\">(</span>.<span class=\"token punctuation\">)</span><span class=\"token property\">f2</span> // <span class=\"token property\">dest</span>. <span class=\"token property-query\">route</span><span class=\"token punctuation\">(</span><span class=\"token property\">f2</span><span class=\"token punctuation\">)</span> <span class=\"token property\">is</span> <span class=\"token property\">present</span> <span class=\"token property\">at</span> <span class=\"token property\">same</span> <span class=\"token property\">level</span> <span class=\"token property\">with</span> <span class=\"token property\">intercepting</span> <span class=\"token property\">here</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>      â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span> // <span class=\"token property\">intercepted</span> <span class=\"token constant\">UI</span>\n<span class=\"token operator\">|</span>   <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>   â””â”€â”€ <span class=\"token property\">f2</span>\n<span class=\"token operator\">|</span>       â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span> // <span class=\"token property\">Original</span> <span class=\"token property\">f2</span> <span class=\"token constant\">UI</span>\n<span class=\"token operator\">|</span>       <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span>       â””â”€â”€ <span class=\"token punctuation\">(</span>..<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>..<span class=\"token punctuation\">)</span><span class=\"token property\">f4</span> // <span class=\"token property\">intercepting</span> <span class=\"token property\">f4</span> <span class=\"token property\">present</span> <span class=\"token property\">at</span> <span class=\"token number\">2</span> <span class=\"token property\">level</span> <span class=\"token property\">above</span>.\n<span class=\"token operator\">|</span>\nâ”œâ”€â”€ <span class=\"token property\">f3</span> // <span class=\"token property\">original</span> <span class=\"token property\">f3</span> <span class=\"token constant\">UI</span>\nâ”‚   â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span>\n<span class=\"token operator\">|</span>\nâ”œâ”€â”€ <span class=\"token property\">f4</span> // <span class=\"token property\">original</span> <span class=\"token property\">f4</span> <span class=\"token constant\">UI</span>\nâ”‚   â””â”€â”€ <span class=\"token property\">page</span>.<span class=\"token property\">js</span>\n\n</code></pre>\n<p>From this above structure the intercepted UI is displayed if we try to load UI of f2 or f3 from f1\neg:</p>\n<pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/f1/f2\"</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">F2 </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/f3\"</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">F3 </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>example:\n<img src=\"/Frontend-JsDev-Handbook/assets/images/intercepting-routes.png\" alt=\"intercepting routes\"></p>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden ðŸŒ±\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}