{"pageProps":{"note":{"id":"k6wrzwjtyopzxbnj2m4is2z","title":"Redux","desc":"","updated":1692768810752,"created":1678452458467,"custom":{},"fname":"learning.redux","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"85d9a518c92acef4b0dbba3a57ade314","links":[{"type":"wiki","from":{"fname":"learning.redux","id":"k6wrzwjtyopzxbnj2m4is2z","vaultName":"Harshita-notes"},"value":"learning.redux.thunk","position":{"start":{"line":137,"column":1,"offset":2714},"end":{"line":137,"column":25,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"learning.redux.thunk"}}],"anchors":{"redux":{"type":"header","text":"Redux","value":"redux","line":8,"column":0,"depth":2},"three-core-concepts":{"type":"header","text":"Three core concepts","value":"three-core-concepts","line":17,"column":0,"depth":2},"principles":{"type":"header","text":"Principles","value":"principles","line":27,"column":0,"depth":2},"redux-store":{"type":"header","text":"Redux store","value":"redux-store","line":37,"column":0,"depth":2},"example":{"type":"header","text":"Example","value":"example","line":47,"column":0,"depth":3},"bindactioncreators":{"type":"header","text":"bindActionCreators","value":"bindactioncreators","line":109,"column":0,"depth":3},"combine-reducers":{"type":"header","text":"Combine Reducers","value":"combine-reducers","line":122,"column":0,"depth":3},"apply-middleware":{"type":"header","text":"Apply Middleware","value":"apply-middleware","line":133,"column":0,"depth":3},"redux-thunk":{"type":"header","text":"Redux Thunk","value":"redux-thunk","line":141,"column":0,"depth":3}},"children":["d9pyzgwyw5glbwl05lihia3","og4aiuuxxnjh56eqvh6tdvl","gterdib2mf9tclbgxb07mjd","s6qvndijnh01d8cuioxy7zw"],"parent":"trkx8xrg7g2fm023ez4ldqj","data":{}},"body":"<h1 id=\"redux\">Redux<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#redux\"></a></h1>\n<h2 id=\"redux-1\">Redux<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#redux-1\"></a></h2>\n<ul>\n<li>predictable state container for js apps.</li>\n<li>predictable because in redux, a pattern is enforced to ensure all transitions are explicit and can be tracked.</li>\n</ul>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-28-35.png\"></p>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-29-07.png\"></p>\n<h2 id=\"three-core-concepts\">Three core concepts<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#three-core-concepts\"></a></h2>\n<ul>\n<li>store</li>\n<li>action: js object that has a type and payload property. The type value is usually defined as constants.</li>\n<li>reducer</li>\n</ul>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-37-23.png\"></p>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-44-19.png\"></p>\n<h2 id=\"principles\">Principles<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#principles\"></a></h2>\n<ol>\n<li>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-39-33.png\"></p>\n</li>\n<li>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-41-03.png\"></p>\n<p>The state is read only and the only way to change the state is dispatch an action</p>\n</li>\n<li>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-22-22-43-13.png\"></p>\n</li>\n</ol>\n<h2 id=\"redux-store\">Redux store<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#redux-store\"></a></h2>\n<p><img src=\"/Frontend-JsDev-Handbook/assets/images/2023-08-23-07-16-10.png\"></p>\n<p>imp methods</p>\n<ul>\n<li>createStore</li>\n<li>bindActionCreators</li>\n<li>combineReducers</li>\n</ul>\n<h3 id=\"example\">Example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example\"></a></h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> redux <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redux'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> createStore <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token property-access\">createStore</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//action types</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CAKE_ORDERED</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CAKE_ORDERED'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CAKE_RESTOCK</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CAKE_RESTOCK'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//action  creators</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">orderCake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">CAKE_ORDERED</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">restockCake</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">qty <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">CAKE_RESTOCK</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">payload</span><span class=\"token operator\">:</span> qty<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// init state</span>\n<span class=\"token keyword\">const</span> initState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">noOfCakes</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//reducer</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> initState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">CAKE_ORDERED</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token spread operator\">...</span>state<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">noOfCakes</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">noOfCakes</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">CAKE_RESTOCK</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token spread operator\">...</span>state<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">noOfCakes</span><span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span><span class=\"token property-access\">noOfCakes</span> <span class=\"token operator\">+</span> action<span class=\"token punctuation\">.</span><span class=\"token property-access\">payload</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword module\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword control-flow\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//state</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Initial State'</span><span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> unsubscribe <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span>\n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Update State'</span><span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">orderCake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">orderCake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">restockCake</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">unsubscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"bindactioncreators\">bindActionCreators<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#bindactioncreators\"></a></h3>\n<ul>\n<li><code>bindActionCreators</code> : a helper method that turns an object whose values are action creators, into an object with the same keys, but with every function wrapped into a dispatch call so they may be invoked directly.</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">bindActionCreators</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span> orderCake<span class=\"token punctuation\">,</span> restockCake <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token property-access\">dispatch</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nactions<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">orderCake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nactions<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">restockCake</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"combine-reducers\">Combine Reducers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#combine-reducers\"></a></h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> rootReducer <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">cake</span><span class=\"token operator\">:</span> cakeReducer<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">iceCream</span><span class=\"token operator\">:</span> iceCreamReducer<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createStore</span><span class=\"token punctuation\">(</span>rootReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"apply-middleware\">Apply Middleware<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#apply-middleware\"></a></h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> reduxLogger <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redux-logger'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> logger <span class=\"token operator\">=</span> reduxLogger<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> redux<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createStore</span><span class=\"token punctuation\">(</span>rootReducer<span class=\"token punctuation\">,</span> <span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"redux-thunk\">Redux Thunk<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#redux-thunk\"></a></h3>\n<p><a href=\"/Frontend-JsDev-Handbook/notes/s6qvndijnh01d8cuioxy7zw\">Thunk</a></p>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/d9pyzgwyw5glbwl05lihia3\">Misc</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/og4aiuuxxnjh56eqvh6tdvl\">React Redux</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/gterdib2mf9tclbgxb07mjd\">Redux Toolkit</a></li>\n<li><a href=\"/Frontend-JsDev-Handbook/notes/s6qvndijnh01d8cuioxy7zw\">Thunk</a></li>\n</ol>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Hi","desc":"","updated":1663067414354,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"},"contentHash":"5e58da66991a53ed4cf17d0cade77fe6","links":[{"type":"wiki","from":{"fname":"root","id":"dlb5bmx7v8f6otsgongz4vx","vaultName":"Harshita-notes"},"value":"user.tharshita13","alias":"@tharshita13","position":{"start":{"line":15,"column":12,"offset":433},"end":{"line":15,"column":24,"offset":445},"indent":[]},"xvault":false,"to":{"fname":"user.tharshita13"}}],"anchors":{"contacts":{"type":"header","text":"Contacts","value":"contacts","line":13,"column":0,"depth":2}},"children":["trkx8xrg7g2fm023ez4ldqj","c8csxid3zoghxorepwcrami","urj8q1uq98o3upmgbt2qxns","ykyv5ng8vb44dx8wlchugby","qfxhhwhykm8ml24xxlu67v3","fmv0zz06pgij3bozzx9zes9"],"parent":null,"data":{},"body":"\nHi,\nWelcome to Harshita's Digital Garden 🌱\nI'm Harshita Joshi. I'm a software engineer.\nWhen not at the computer, I play ukulele, do yoga, study [German](https://harshita-mindfire.github.io/german-for-beginners/) and wonder about having numerous pets.\n\n## Contacts\n\nYou can find and contact me in the following places\n\n- Email: tharshita13@gmail.com\n\n- Github: [Harshita-mindfire](https://github.com/Harshita-mindfire)\n\n- Medium: [@tharshita13](https://medium.com/@tharshita13)\n\n- LinkedIn: [Harshita Joshi](https://www.linkedin.com/in/harshita-joshi-030b29118/)\n\n- Instagram: [imharshita07](https://www.instagram.com/imharshita07/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true,"enableEngineV3":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Harshita-notes","sync":"sync"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Digital Garden","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://Harshita-mindfire.github.io","assetsPrefix":"/Frontend-JsDev-Handbook","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}